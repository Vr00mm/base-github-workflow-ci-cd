name: docker-helm
on:
  workflow_dispatch:
  push:
    branches:
      - 'master'
  pull_request:
    branches:
      - 'master'
jobs:
  infos:
    runs-on: ubuntu-latest
    container:
      image: vr00mm/vr00mm:get-version
    steps:
      - name: Get-Version
        run: /entrypoint.sh
        id: get-version
    outputs:
      CURRENT_VERSION: ${{ steps.get-version.outputs.CURRENT_VERSION }}
      NEXT_VERSION: ${{ steps.get-version.outputs.NEXT_VERSION }}

  print-infos:
    runs-on: ubuntu-latest
    container:
      image: alpine:latest
    steps:
      - name: Print-Version
        run: |
          echo CURRENT_VERSION: ${{ needs.infos.outputs.CURRENT_VERSION }}
          echo NEXT_VERSION: ${{ needs.infos.outputs.NEXT_VERSION }}
      - name: Print-Env
        run: printenv

  docker-build:
    needs: infos
    runs-on: ubuntu-latest
    container:
      image: docker:dind
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
    steps:
      - name: Load Workspace
        uses: actions/checkout@v1
      - name: Build Docker Image
        run: |
          docker build ${GITHUB_WORKSPACE}/docker \
          -t docker.io/vr00mm/vr00mm:test \
          -t docker.io/vr00mm/vr00mm:latest \
          --build-arg APP_NAME=test \
          --build-arg GIT_REPOSITORY=test \
          --build-arg BRANCH=test \
          --build-arg COMMIT=test \
          --build-arg BUILD_DAT=test \
          --build-arg BUILD_VERSION=test \
          --build-arg DOCKER_VERSION=test \
          --build-arg GO_BUILDER=test \
          --build-arg WORKSPACE=test
      - name: Push Docker Image to Registry
        run: |
          docker push \
          docker.io/vr00mm/vr00mm:test \
          docker.io/vr00mm/vr00mm:latest

  helm-build:
    needs: [infos, docker-build]
    runs-on: ubuntu-latest
    container:
      image: vr00mm/vr00mm:helm-client
      env:
        ENV_VAR: test-helm
    steps:
      - name: Load Workspace
        uses: actions/checkout@v1
      - name: Configure helm
        run: echo "myconfig" > .helm
      - name: Helm lint
        run: echo helm lint ${{fromJSON(needs.get-version.outputs.NEXT_VERSION)}}
      - name: helm package
        run: echo helm package blabla
      - name: helm push
        run: echo helm push package-version-1.0.0.tgz

  deploy-dry-run:
    needs: [infos, docker-build, helm-build]
    runs-on: ubuntu-latest
    container:
      image: vr00mm/vr00mm:helm-client
      env:
        ENV_VAR: test-helm
    steps:
      - name: Load Workspace
        uses: actions/checkout@v1
      - name: helm dry-run
        run: echo helm upgrade install package-version-1.0.0.tgz

  release:
    needs: [infos, docker-build, helm-build, deploy-dry-run]
    runs-on: ubuntu-latest
    container:
      image: vr00mm/vr00mm:helm-client
      env:
        ENV_VAR: test-helm
    steps:
      - name: Load Workspace
        uses: actions/checkout@v1
      - name: helm dry-run
        run: echo helm upgrade install package-version-1.0.0.tgz

  deploy:
    needs: [infos, docker-build, helm-build, release, deploy-dry-run]
    runs-on: ubuntu-latest
    container:
      image: vr00mm/vr00mm:helm-client
      env:
        ENV_VAR: test-helm
    steps:
      - name: Load Workspace
        uses: actions/checkout@v1
      - name: helm dry-run
        run: echo helm upgrade install package-version-1.0.0.tgz

  post-always:
    if: always()
    needs: [infos, docker-build, helm-build, deploy-dry-run, release, deploy]
    runs-on: ubuntu-latest
    container:
      image: alpine:latest
    steps:
      - name: Happy Helming
        run: printenv

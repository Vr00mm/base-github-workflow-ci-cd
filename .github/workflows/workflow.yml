name: docker-helm
on:
  workflow_dispatch:
  push:
    branches:
      - 'master'
  pull_request:
    branches:
      - 'master'
jobs:
  infos:
    runs-on: ubuntu-latest
    container:
      image: vr00mm/vr00mm:get-version
    steps:
      - name: Get-Version
        run: /entrypoint.sh
        id: get-version
    outputs:
      CURRENT_VERSION: ${{ steps.get-version.outputs.CURRENT_VERSION }}
      NEXT_VERSION: ${{ steps.get-version.outputs.NEXT_VERSION }}

  i-am-on-node-test:
    needs: infos
    runs-on: ubuntu-latest
    steps:
      - name: Discovering HOME
        run: ls -R $HOME | grep ":$" | sed -e 's/:$//' -e 's/[^-][^\/]*\//--/g' -e 's/^/   /' -e 's/-/|/' 2>/dev/null || true

      - name: Discovering W
        run: ls -R /__w/ | grep ":$" | sed -e 's/:$//' -e 's/[^-][^\/]*\//--/g' -e 's/^/   /' -e 's/-/|/' 2>/dev/null || true

      - name: Discovering DEFAULT
        run: ls -R | grep ":$" | sed -e 's/:$//' -e 's/[^-][^\/]*\//--/g' -e 's/^/   /' -e 's/-/|/' 2>/dev/null || true

      - name: Discovering MOUNTS
        run: cat /proc/mounts

      - name: Discovering ENVS
        run: printenv

  docker-build:
    needs: infos
    runs-on: ubuntu-latest
    container:
      image: docker:dind
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
    steps:
      - name: Discovering HOME
        run: ls -R $HOME | grep ":$" | sed -e 's/:$//' -e 's/[^-][^\/]*\//--/g' -e 's/^/   /' -e 's/-/|/' 2>/dev/null || true

      - name: Discovering W
        run: ls -R /__w/ | grep ":$" | sed -e 's/:$//' -e 's/[^-][^\/]*\//--/g' -e 's/^/   /' -e 's/-/|/' 2>/dev/null || true

      - name: Discovering DEFAULT
        run: ls -R | grep ":$" | sed -e 's/:$//' -e 's/[^-][^\/]*\//--/g' -e 's/^/   /' -e 's/-/|/' 2>/dev/null || true

      - name: Discovering MOUNTS
        run: cat /proc/mounts

      - name: Discovering ENVS
        run: printenv

      - name: Docker Build
        run: docker build ${GITHUB_WORKSPACE}/docker -t vr00mm/vr00mm:image-name

  helm-build:
    needs: docker-build
    runs-on: ubuntu-latest
    container:
      image: vr00mm/vr00mm:helm-client
      env:
        ENV_VAR: test-helm
    steps:
      - name: Configure helm
        run: echo "myconfig" > .helm
      - name: Helm lint
        run: echo helm lint ${{fromJSON(needs.get-version.outputs.NEXT_VERSION)}}
      - name: helm package
        run: echo helm package blabla
      - name: helm test
        run: echo helm upgrade --install test package-version-1.0.0.tgz --namespace dry-run --dry-run -f values_test.yml
      - name: helm push
        run: echo helm push package-version-1.0.0.tgz

  post-always:
    if: always()
    needs: [infos, docker-build, helm-build]
    runs-on: ubuntu-latest
    container:
      image: alpine:latest
    steps:
      - name: Happy Helming
        run: printenv
